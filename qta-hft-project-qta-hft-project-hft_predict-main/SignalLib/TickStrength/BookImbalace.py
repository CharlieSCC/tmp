from SignalLib import *
from utils.data_utils import ffill

# original RawBookImbalance
def f2(bvsum, avsum, n):
    ba_diff = bvsum - avsum
    ba_sum = bvsum + avsum
    return ta.EMA(ffill(ba_diff) / ffill(ba_sum), timeperiod=n)

def func(d, n):
    """
    Â§©È£éËØÅÂà∏-Â§©È£éËØÅÂà∏Â∏ÇÂú∫ÂæÆËßÇÁªìÊûÑÊé¢ÊûêÁ≥ªÂàó‰πã‰∫åÔºöËÆ¢ÂçïÁ∞ø‰∏äÁöÑalpha
    BID=‚àëùëèùëñùëëùëÉùë•ùëñ‚àóùëèùëñùëëùëâùëúùëôùëñ‚àóùë§ùëñ
    ASK=‚àëùëéùë†ùëòùëÉùë•ùëñ‚àóùëéùë†ùëòùëâùëúùëôùëñ‚àóùë§
    ùëÜùëùùëüùëíùëéùëë_ùëáùëñùëêùëò=(ùêµùêºùê∑‚àíùê¥ùëÜùêæ)/(ùêµùêºùê∑+ùê¥ùëÜùêæ)
    Êàë‰ª¨ÂàÜÂà´ÂÆö‰πâÊåáÊ†áBID„ÄÅASKÂ∫¶Èáè‰π∞„ÄÅÂçñÁõòÂè£ÊâÄÊèê‰æõÁöÑÊµÅÂä®ÊÄßÂº∫Âº±ÔºåËÄÉËôë‰ª∑Ê†ºÂèØËÉΩÂá∫Áé∞Ë∑≥Ê°£ÔºåÊàë‰ª¨Âú®Ê≠§Áî®ÊåÇÂçïÈáëÈ¢ùËÄåÈùûÊåÇÂçïÊï∞Èáè
    ÂÖ∂‰∏≠ùëèùëñùëëùëÉùë•ùëñ„ÄÅùëèùëñùëëùëâùëúùëôùëñÂàÜÂà´‰∏∫‰π∞ÁõòÁ¨¨iÊå°ÊåÇÂçïÁöÑ‰ª∑Ê†ºÂíåÊï∞ÈáèÔºåùëéùë†ùëòùëÉùë•ùëñ„ÄÅùëéùë†ùëòùëâùëúùëôùëñÂàÜÂà´‰∏∫ÂçñÁõòÁ¨¨iÊå°ÊåÇÂçïÁöÑ‰ª∑Ê†ºÂíåÊï∞ÈáèÔºõùë§ùëñ‰∏∫‰∏çÂêåÊ°£‰ΩçÊùÉÈáçÔºåËÄÉËôë‰ª∑Ê†ºÁöÑ‰ºòÂÖàÊ¨°Â∫è
    Êàë‰ª¨Ëµã‰∫àÈù†ÂâçÁöÑÊ°£‰Ωç‰ª•Êõ¥È´òÁöÑÊùÉÈáç
    Parameters
    ----------
    d :
    n :

    Returns
    -------

    """

    BID = np.sum(d[f'bp{i}'] * d[f'bv{i}'] * (1 - (i - 1) / 10) for i in range(1, 11))  # ask amount
    ASK = np.sum(d[f'ap{i}'] * d[f'av{i}'] * (1 - (i - 1) / 10) for i in range(1, 11))  # bid amount
    spread_tick = np.where((BID + ASK) > 0, (BID - ASK) / (BID + ASK), 0)

    # original BookImbalance
    return ta.EMA(ffill(spread_tick), n),\
           f2(d['bv10sum'], d['av10sum'], n) #ÂçÅÊ°£

if __name__ == '__main__':
    n=5
    for n in [5, 10, 20, 50]:
        res = run_test(func, n, w=5)
