# from SignalLib import *
# def func(d, w1, w2):
#     """
#     高频因子（2）：结构化反转因子__高频因子系列报告_长江证券

#     对于基础反转因子来说，简单的
#     使用过去一段时间的总累计收益率只用到了交易的结果数据，并没有利用到交易的过程
#     数据，故可以适当提高数据频率实现信息的表达。下式展示了以更高频的时间段划分方
#     式，构造反转因子表达通式，即为广义上反转因子的通式，其中𝑝𝑒𝑟𝑖𝑜𝑑为过去一段时间
#     按一定规则划分时间段的总时间段个数，𝑤𝑖为每个时刻价格变动的加权方式。
#     本文基于反转效应在交易行为上的体现，即成交越活跃价格容易反转，给出按成交量加
#     权的高频反转因子构建方式，如下式：
#     𝐑𝐞𝐯𝒑𝒆𝒓 = ∑ 𝒘𝒊 * 𝐥𝐨𝐠(𝑪𝒍𝒐𝒔𝒆 𝒕−𝒊+𝟏/𝑪𝒍𝒐𝒔𝒆𝒕−𝒊), 𝑤𝑖 ∝ 𝑣𝑜𝑙𝑢𝑚𝑒𝑖
#     Parameters
#     ----------
#     d :
#     w1 : ret 计算窗口 建议与预测目标相近
#     w2 : 平滑窗口

#     Returns
#     -------

#     """

#     c, v = d['c'], d['v']
#     return ta.MA(np.log(ta.ROCR(c, w1)) * ta.SUM(v, w1), w2)


# if __name__ == '__main__':
#     for ns in [[5, 10], [5, 20], [5, 50], [5, 80],[5, 100]]:
#         res = run_test(func, *ns, w=5)

